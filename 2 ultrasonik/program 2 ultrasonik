import RPi.GPIO as GPIO
import time

# Pin setup for sensor 1 (Trigger = 27, Echo = 17)
trigger_pin_1 = 27
echo_pin_1 = 17

# Pin setup for sensor 2 (Trigger = 6, Echo = 5)
trigger_pin_2 = 6
echo_pin_2 = 5

# Pin setup for Buzzer
buzzer_pin = 12

GPIO.setmode(GPIO.BOARD)  # Menggunakan nomor pin fisik (BOARD mode)

# Setup sensor 1
GPIO.setup(trigger_pin_1, GPIO.OUT)
GPIO.setup(echo_pin_1, GPIO.IN)

# Setup sensor 2
GPIO.setup(trigger_pin_2, GPIO.OUT)
GPIO.setup(echo_pin_2, GPIO.IN)

# Setup buzzer
GPIO.setup(buzzer_pin, GPIO.OUT)

def send_trigger_pulse(trigger_pin):
    GPIO.output(trigger_pin, True)
    time.sleep(0.00001)  # Mengirimkan sinyal trigger selama 10 mikrodetik
    GPIO.output(trigger_pin, False)

def wait_for_echo(echo_pin, value, timeout):
    count = timeout
    while GPIO.input(echo_pin) != value and count > 0:
        count -= 1

def get_distance(trigger_pin, echo_pin):
    # Kirim sinyal trigger
    send_trigger_pulse(trigger_pin)
    
    # Tunggu echo mulai (high)
    wait_for_echo(echo_pin, True, 10000)
    start = time.time()  # Catat waktu mulai
    
    # Tunggu echo berakhir (low)
    wait_for_echo(echo_pin, False, 10000)
    finish = time.time()  # Catat waktu selesai
    
    # Hitung panjang pulse (waktu respons)
    pulse_len = finish - start
    
    # Menghitung jarak dalam cm
    distance_cm = pulse_len * 17150  # Rumus: (waktu * kecepatan suara dalam udara) / 2
    
    return distance_cm

def check_buzzer_condition(distance_cm):
    # Buzzer menyala jika jarak lebih dari 5 cm atau kurang dari 3 cm
   if distance_cm > 5 or distance_cm < 3:
       GPIO.output(buzzer_pin, True)  # Nyalakan buzzer
   else:
       GPIO.output(buzzer_pin, False)  # Matikan buzzer

try:
    while True:
        # Mengukur jarak dari sensor 1
        distance_cm_1 = get_distance(trigger_pin_1, echo_pin_1)
        print("Sensor 1 - cm=%.2f" % (distance_cm_1))
        
        # Cek kondisi buzzer berdasarkan jarak sensor 1
       # check_buzzer_condition(distance_cm_1)
        
        # Mengukur jarak dari sensor 2
        distance_cm_2 = get_distance(trigger_pin_2, echo_pin_2)
        print("Sensor 2 - cm=%.2f" % (distance_cm_2))
        
        # Cek kondisi buzzer berdasarkan jarak sensor 2
      #  check_buzzer_condition(distance_cm_2)
        
        time.sleep(1)

except KeyboardInterrupt:
    GPIO.cleanup()
